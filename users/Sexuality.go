// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package users

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Sexuality struct {
	_tab flatbuffers.Struct
}

func (rcv *Sexuality) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Sexuality) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *Sexuality) Heterosexual() bool {
	return rcv._tab.GetBool(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
func (rcv *Sexuality) MutateHeterosexual(n bool) bool {
	return rcv._tab.MutateBool(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

func (rcv *Sexuality) Homosexual() bool {
	return rcv._tab.GetBool(rcv._tab.Pos + flatbuffers.UOffsetT(1))
}
func (rcv *Sexuality) MutateHomosexual(n bool) bool {
	return rcv._tab.MutateBool(rcv._tab.Pos+flatbuffers.UOffsetT(1), n)
}

func (rcv *Sexuality) Bisexual() bool {
	return rcv._tab.GetBool(rcv._tab.Pos + flatbuffers.UOffsetT(2))
}
func (rcv *Sexuality) MutateBisexual(n bool) bool {
	return rcv._tab.MutateBool(rcv._tab.Pos+flatbuffers.UOffsetT(2), n)
}

func CreateSexuality(builder *flatbuffers.Builder, heterosexual bool, homosexual bool, bisexual bool) flatbuffers.UOffsetT {
	builder.Prep(1, 3)
	builder.PrependBool(bisexual)
	builder.PrependBool(homosexual)
	builder.PrependBool(heterosexual)
	return builder.Offset()
}
